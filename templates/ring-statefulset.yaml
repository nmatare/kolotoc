---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "kolotoc.fullname" . }}
  labels:
    app: {{ template "kolotoc.name" . }}
    chart: {{ template "kolotoc.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    role: ring  
spec:
  replicas: {{ .Values.ring.number }}
  selector:
    matchLabels:
      app: {{ template "kolotoc.name" . }}
      release: {{ .Release.Name }}
      heritage: {{ .Release.Service }}
      role: ring
  serviceName: {{ template "kolotoc.fullname" . }}
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: {{ template "kolotoc.name" . }}
        chart: {{ template "kolotoc.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        role: ring
    spec:
      # hostNetwork: True
      # hostPID: False
      # dnsPolicy: ClusterFirstWithHostNet
      volumes:
      - name: {{ template "kolotoc.fullname" . }}-config
        configMap:
          name: {{ template "kolotoc.fullname" . }}
          items:
          - key: scheduler.config
            path: scheduler.hostfile
            mode: 438
          - key: ring.config
            path: ring.hostfile
            mode: 438
          - key: cuda.config
            path: cuda.sh
            mode: 365
          - key: ssh.wait
            path: wait.sh
            mode: 365 
          - key: ssh.config
            path: ssh.sh
            mode: 365
          - key: ring.run
            path: run.sh
            mode: 365
      - name: {{ template "kolotoc.fullname" . }}-secret
        secret:
          secretName: {{ template "kolotoc.fullname" . }}
          defaultMode: 448
          items:
          - key: host-key
            path: id_rsa
          - key: host-key-pub
            path: authorized_keys
      containers:
      - name: ring
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: PROJECT_NAME
          value: "{{ .Values.projectName }}"
        - name: OPENMPI_SSH_PORT
          value: "{{ .Values.ssh.port }}"
        - name: CUDA_STUB_LOCATION
          value: "{{ .Values.cuda.stubs }}"
        - name: NUM_DASK_WORKERS
          value: "{{ .Values.ring.workers }}"
        - name: DASK_SCHEDULER_ADDRESS
          value: {{ template "kolotoc.fullname" . }}-scheduler
     {{- if .Values.env }}
     {{- range $key, $value := .Values.env }}
        - name: "{{ $key }}"
          value: "{{ $value }}"
     {{- end }}
     {{- end }}
        securityContext:
          privileged: true
        ports:
        - name: ssh
          containerPort: {{ .Values.ssh.port }}
        volumeMounts:
        - name: {{ template "kolotoc.fullname" . }}-config
          mountPath: /kolotoc/generated
        - name: {{ template "kolotoc.fullname" . }}-secret
          readOnly: true
          mountPath: "/etc/secret-volume"
{{- if .Values.volumeMounts }}
{{ toYaml .Values.volumeMounts | indent 8 }}
{{- end }}
        command: ["/bin/bash", "-c"]
        args: [". /kolotoc/generated/ssh.sh && 
                . /kolotoc/generated/cuda.sh && 
                . /kolotoc/generated/wait.sh &&       
                . /kolotoc/generated/run.sh"]
        resources:
          requests:
            nvidia.com/gpu: {{ .Values.ring.gpus }}
          limits:
            nvidia.com/gpu: {{ .Values.ring.gpus }}            
